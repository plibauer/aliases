# Function settitle
# Arg1 : Release Version of Trim
# Arg2 : Architecture (x86 or x64)
# Arg3 : Build (Debug or Release)
# Arg4 : Database ID
setenvTitle ()
{
   echo -ne "\033]0;         REL=${1} ARCH=${2}, BUILD=${3}, DBID=${4}\007"
}

# Function set default environment
# Arg1 : current revision (eg. 82)
# Arg2 : DBID
# Arg3 : Architecture (x86 or x64)
# Arg4 : Default compiler (eg. VS2008, VS2013, ..)
# Arg5 : Build (Debug or Release)
setDefaultEnv ()
{
   unalias -a
   alias_dir=~/aliases/bash
   source $alias_dir/localEnvironment 

   revision=${1}
   DBID=${2}
   defArch=${3}
   defCompiler=${4}
   defBuild=${5}
   trimdir=$REPOS_ROOT":/$revision"
   dbDefault=Test_"$revision"_SqlServer
   dbSession=$dbDefault
   cygtrimdir="/$REPOS_ROOT/$revision"
   idolDb=TRIM_"$DBID"
   trimcfgdir="$trimdir/trim/SharedTrimServerData/ServerData"
   currentEnv=~/aliases/"$revision"environment

   setenvTitle $trimdir $defArch $defBuild $DBID
   source $alias_dir/bash_aliases
   source $alias_dir/default
}

# b) function cd_func
# This function defines a 'cd' replacement function capable of keeping,
# displaying and accessing history of visited directories, up to 10 entries.
# To use it, uncomment it, source this file and try 'cd --'.
# acd_func 1.0.5, 10-nov-2004
# Petar Marinov, http:/geocities.com/h2428, this is public domain
cd_func ()
{
   local x2 the_new_dir adir index
   local -i cnt

   if [[ $1 ==  "--" ]]; then
     dirs -v
     return 0
   fi

   the_new_dir=$1
   [[ -z $1 ]] && the_new_dir=$HOME

   if [[ ${the_new_dir:0:1} == '-' ]]; then
     #
     # Extract dir N from dirs
     index=${the_new_dir:1}
     [[ -z $index ]] && index=1
     adir=$(dirs +$index)
     [[ -z $adir ]] && return 1
     the_new_dir=$adir
   fi

   #
   # '~' has to be substituted by ${HOME}
   [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir="${HOME}${the_new_dir:1}"

   #
   # Now change to the new dir and add to the top of the stack
   pushd "${the_new_dir}" > /dev/null
   [[ $? -ne 0 ]] && return 1
   the_new_dir=$(pwd)

   #
   # Trim down everything beyond 11th entry
   popd -n +11 2>/dev/null 1>/dev/null

   #
   # Remove any other occurence of this dir, skipping the top of the stack
   for ((cnt=1; cnt <= 10; cnt++)); do
     x2=$(dirs +${cnt} 2>/dev/null)
     [[ $? -ne 0 ]] && return 0
     [[ ${x2:0:1} == '~' ]] && x2="${HOME}${x2:1}"
     if [[ "${x2}" == "${the_new_dir}" ]]; then
       popd -n +$cnt 2>/dev/null 1>/dev/null
       cnt=cnt-1
     fi
   done

   return 0
}

#alias cd=cd_func
