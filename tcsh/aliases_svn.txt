#######################################################################################################################
# 
#  SVN ALIASES
#
#  None of the aliases should need to be re-sourced after the file is read the first time
#  Any variables that might change due to the environment should have deferred substitution
#

alias svnhelp     'echo                                                                                    \\
"\n                                                                                                        \\
\t rev, statrev <revision> : Show the log for the given <revision>                                         \\
\t              --diff     : With no argument, diff all files in the revision, otherwise a list/range can  \\
\t                           can be specified, eg. --diff 1-5,7,9                                          \\
\t revhead, statrevhead    : Show last update to trim/staticrepo checkout                                  \\
\t showlatest              : Show last 10 changes to current path                                          \\
\t match <string>          : Search for log entries matching <string>                                      \\
\t labmatch <string>       : Search for log entries matching <string> in the sqlite database (faster)      \\
\t sync{lab,static}        : Run svn sync for lab/static                                                   \\
\t labupdate[local], statupdate[local]                                                                     \\
\t                         : update the sqlite databases from a remote or local svn server                 \\
\t svninfo                 : Show details for the 3 main checkouts, trim, doc and TRIMStaticRepo           \\
\t refresh{lab,static}     : Combination of above 2 aliases                                                \\
\t remlock, remlockstat    : Remove database locks                                                         \\
\t lablook, statlook       : Check the sync URL from which we are mirroring                                \\
\t                                                                                                         \\
\n\n"                                                                                                      \\
' 

alias svnuptrim       'svn update $var_trimDir'
alias svnuptrimdoco   'svn update $var_trimDir/doc/doc/DocPub'
alias svnup           'svnuptrim; date; svnuptrimdoco'
alias svnupall        'date; svnup; svnstatic; date;'
alias svnlogrev       'svn log $SVN_LAB_URI/REPOS/trunk -v -r "\!^":"\!^"'

alias trimhead        'svn log $var_trimDir -r HEAD:1 --limit 1 --verbose'
alias trimlatest      'svn log $var_trimDir -r HEAD:1 --limit 10 --verbose'

alias svnstatic       'svn update $STATIC_REPO'
alias svnrevcurrent   'svn log -v -r "\!^":"\!^"'
alias svnhead         'svn log -l 1 -v'
alias svnlatest       'svn log -l 5 -v'
alias showlatest      svnlatest
alias latest          svnlatest
alias svndiff         'svn diff -r PREV'

alias writeSvnBranch 'svnstatus | $PERL -ne '"'"' /^URL:\s+(.+)\/(REPOS\/.+)/ and do { print "$1/$2\n" }' "' "' > C:/temp/svn_branch_x.txt'
alias showrevs       'writeSvnBranch && echo -n "\!*"      | processSvnLog'
alias showchanges     showrevs
alias svnmods        'svn status $var_trimDir -q'
alias modifications  svnmods

alias svnstatus       'svn info $var_trimDir | $PERL -ne '"'"' print if /^Path|^URL:|^\n/; '"'"
alias svnstatusfull   'svn info $var_trimDir | $PERL -ne '"'"' print unless /^(Working Copy|Relative|Node Kind|Schedule)/; '"'"
alias svninfostat     'svn info $STATIC_REPO | $PERL -ne '"'"' print unless /^(Working Copy|Relative|Node Kind|Schedule)/; '"'"
alias svninfodoc      'svn info $var_trimDir/doc/doc/DocPub | $PERL -ne '"'"' print unless /^(Working Copy|Relative|Node Kind|Schedule)/; '"'"
alias svninfo	      'svnstatusfull && echo && svninfodoc && echo && svninfostat'

alias svnrepoinfo     'cat $SVN_LAB_PATH/db/revprops/0/0 | egrep -v "^(K|V) " '
alias svnrepoinfostat 'cat $SVN_STATIC_PATH/db/revprops/0/0 | egrep -v "^(K|V) " '
alias repoinfo        svnrepoinfo
alias repoinfostat    svnrepoinfostat

alias statproc        '$PERL $SVN_STATIC_DB/svn_log_processor.pl'
alias statrev         'statproc --rev'
alias statrevhead     'statrev head'
alias statupdate      'statproc --update --repo $SVN_STATIC_URI/REPOS'
alias statupdatelocal 'statproc --update --repo $SVN_LOCAL_STATIC/REPOS'
alias statlook        'svnlook pg --revprop -r0 $SVN_STATIC_PATH svn:sync-from-url && echo'

#
#  LAB Aliases
#

alias labproc        '$PERL $SVN_LAB_DB/svn_log_processor.pl'
alias rev            'labproc --rev'
alias revhead        'rev head'
alias revlocal       'labproc --use_local --rev'
alias match          'labproc --no_case --limit 30 --match'
alias labupdate      'labproc --update --repo $SVN_LAB_URI/REPOS'
alias labupdatelocal 'labproc --update --repo $SVN_LOCAL_LAB/REPOS'
alias labhelp        'labproc --help'
alias lablook        'svnlook pg --revprop -r0 $SVN_LAB_PATH svn:sync-from-url  && echo'

# If svnserve is running, the sync command below will work, otherwise the subsequent one should always work
# alias syncsvn    "svnsync sync svn://localhost/"
#
alias syncsvn           'svnsync sync $SVN_LAB_FILE'
alias synclab           'svnsync sync $SVN_LAB_FILE $SVN_LAB_URI'
alias synclabwork       'svnsync sync $SVN_LAB_FILE svn://labsvn:1137/TRIM'
alias refreshlab        'synclab && labupdate'

alias syncstatic        'svnsync sync $SVN_STATIC_FILE $SVN_STATIC_URI'
alias refreshstatic     'syncstatic && statupdate'

alias refreshboth	'refreshlab; refreshstatic'
alias remlock           'svn propdel svn:sync-lock --revprop -r 0 $SVN_LAB_FILE'
alias remlockstat       'svn propdel svn:sync-lock --revprop -r 0 $SVN_STATIC_FILE'
alias trim2local        'svnrelocate $var_trimDir $SVN_LOCAL_LAB'
alias trim2remote       'svnrelocate $var_trimDir $SVN_LAB_URI'
alias static2local      'svnrelocate $STATIC_REPO $SVN_LOCAL_STATIC'
alias static2remote     'svnrelocate $STATIC_REPO $SVN_STATIC_URI'
alias doc2local         'svnrelocate $var_trimDir/doc/doc/DocPub $SVN_LOCAL_LAB'
alias doc2remote        'svnrelocate $var_trimDir/doc/doc/DocPub $SVN_LAB_URI'
alias slog              'svn log -r HEAD:\!^        | svn_parse_log' 
alias slogr             'svn log -r \!:1\:\!:2      | svn_parse_log' 
alias slogurl           'svn log \!:1 -r HEAD:\!:2  | svn_parse_log' 
alias slogurlr          'svn log \!:1 -r \!:2\:\!:3 | svn_parse_log' 

# Update from local servers if possible
alias svnuplocal        'echo "Relocating $var_trimDir to $SVN_LOCAL_LAB ..."; trim2local; svnuptrim; echo "Relocating $var_trimDir to $SVN_LAB_URI ..."; trim2remote'  
alias svnstaticlocal    'echo "Relocating $STATIC_REPO to $SVN_LOCAL_STATIC ..."; static2local; svnstatic; echo "Relocating $STATIC_REPO to $SVN_STATIC_URI ..."; static2remote'  

#--------------------------------------------
# SQLITE

set SQLITE_DB_STAT = $SVN_STATIC_DB/svn.db
set SQLITE_DB_LAB  = $SVN_LAB_DB/svn.db

alias labsqldb          'cygstart cmd.exe /c sqlite3.exe $SQLITE_DB_LAB'
alias statsqldb         'cygstart cmd.exe /c sqlite3.exe $SQLITE_DB_STAT'

alias labsql            'sqlite3.exe $SQLITE_DB_LAB'
alias labfilepath       labsql \"SELECT \* FROM files WHERE PATH LIKE \'%\!^%\'\"
alias labsqlfind        labsql \"SELECT \* FROM messages WHERE message LIKE \'%\!^%\'\"
alias labmatch          'labsqlfind \!^ |   $PERL -ne '"'"'  if(/^(\d+)\|(.+)$/){ print "-------------------------| $1 |--------------------------\n$2\n" }else{print}    '"'"
alias labsearch         labmatch
alias labfind           labmatch

alias statsql           'sqlite3.exe $SQLITE_DB_STAT'
alias statfilepath      statsql \"SELECT \* FROM files WHERE PATH LIKE \'%\!^%\'\"
alias statsqlfind       statsql \"SELECT \* FROM messages WHERE message LIKE \'%\!^%\'\"
alias statmatch         'statsqlfind \!^ |   $PERL -ne '"'"'  if(/^(\d+)\|(.+)$/){ print "-------------------------| $1 |--------------------------\n$2\n" }else{print}    '"'"
alias statsearch        statmatch
alias statfind          statmatch

# Query the SVN sqlite database for the UUID of a given checked out path
alias sqliteuuid            sqlite .svn/wc.db 'select uuid from REPOSITORY where id=1'
alias uuidupdate            sqlite .svn/wc.db 'update REPOSITORY set uuid=\!^ where id=1'
alias repoinfo              sqlite .svn/wc.db 'select * from REPOSITORY'

#----------------------------------------------

# Setup the documentation directory
alias makedoco      'mkdir -p $var_trimDir/doc/doc; cd -p $var_trimDir/doc/doc; svn co $SVN_LAB_URI/REPOS/doc/trunk/DocPub' 

alias statrelocaterepo 'echo                                            \\
"\n                                                                     \\
>svnlook pg --revprop -r0 $SVN_STATIC_PATH svn:sync-from-url            \\
> url.txt\n                                                             \\
<... edit url.txt ...>\n                                                \\
(*DONT* add a newline to the end - use textpad, or vi -b ...)\n         \\
>svnadmin setrevprop $SVN_STATIC_PATH -r0 svn:sync-from-url url.txt\n   \\
" '

alias labrelocaterepo 'echo                                             \\
"\n                                                                     \\
>svnlook pg --revprop -r0 $SVN_LAB_PATH svn:sync-from-url               \\
> url.txt\n                                                             \\
<... edit url.txt ...>\n                                                \\
(*DONT* add a newline to the end - use textpad, or vi -b ...)\n         \\
>svnadmin setrevprop $SVN_LAB_PATH -r0 svn:sync-from-url url.txt\n      \\
" '

alias svnrelocate   ' echo `svn info \!:1  |             \\
pgrep "URL: (svn|http)"` "AA" \!:2 "BB" \!:1             \\
 | $PERL -ne ' "' "'                                     \\
      /^URL: (.+)\/REPOS.+ AA (.+) BB (.+)$/             \\
  and system("svn","relocate","$1","$2","$3");           \\
 '"'"

alias svn_parse_log '$PERL -e ' "'" '       \\
@in = <>;                                   \\
while($l = shift @in){                      \\
  chomp $l;                                 \\
  if($l =~ /^r(\d+)\s+\|\s+(.+)\s+\|\s+\d+-\d+-\d+\s+(\d+:\d+:\d+)\s+(\+\d+)\s+\((.+)\)\s+|\s+\d+\s+line/){ \\
    print "$1\t$2\t$5 $3\t"                 \\
  }                                         \\
  elsif($l =~ /^\-\-\-/){                   \\
    print "\n";                             \\
  }                                         \\
  else {                                    \\
    $l =~ s/^\s+|\s+$//g;                   \\
    print " $l";                            \\
  }}'  "'"
  
alias svnservers      'echo "\n                          \\
LOCAL SERVERS:                                           \\
\tSVN_LOCAL_LAB    : $SVN_LOCAL_LAB                      \\
\tSVN_LOCAL_STATIC : $SVN_LOCAL_STATIC                   \\
\n                                                       \\
REMOTE SERVERS:                                          \\
\tSVN_LAB_URI      : $SVN_LAB_URI                        \\
\tSVN_STATIC_URI   : $SVN_STATIC_URI                     \\
"'

alias processSvnLog  '$PERL -e  '"'"'                    \\
  $| = 1;                                                \\
  chomp($currdir = `pwd`);                               \\
  $currdir =~ s|^/./[^/]+/||;                            \\
  $in=<>;                                                \\
                                                         \\
  if($in =~ /^(.+)\s+(\d+)\s+(list)$/i){                 \\
     ($a,$b,$c) = ($1,$2,$3);                            \\
  }                                                      \\
  elsif($in =~ /^(.+)\s+(\d+)$/i){                       \\
     ($a,$b,$c) = ($1,$2,"");                            \\
  }                                                      \\
  else {                                                 \\
     ($a,$b,$c) = ($in, 10, "");                         \\
  }                                                      \\
                                                         \\
  if($currdir ne ""){                                    \\
    if($a !~ m|^$currdir/|) {                            \\
        $a = $currdir."/$a";                             \\
    }                                                    \\
  }                                                      \\
  $a =~ s|[/\\]$||;                                      \\
                                                         \\
  open TMP,"C:/temp/svn_branch_x.txt";                   \\
  @u = <TMP>;                                            \\
  close TMP;                                             \\
  close TMP;                                             \\
  $ans = shift @u;                                       \\
  chomp $ans;                                            \\
  print "TARGET => $ans/$a\n\n";                         \\
  $cmd = "svn log \"$ans/$a\" -r HEAD:1 --limit $b";     \\
  @out = `$cmd`;                                         \\
                                                         \\
  if($c eq "list"){                                      \\
    for(@out){                                           \\
      if(/^r(\d+)/){ push @list, $1; next }              \\
    }                                                    \\
    print join ",", @list;                               \\
    print "\n";                                          \\
    exit;                                                \\
  }                                                      \\
                                                         \\
  for(@out){                                             \\
    if(/^r(\d+)/){                                       \\
       s/^r(\d+)/$1/;                                    \\
       print;                                            \\
       next;                                             \\
    }                                                    \\
    next if /^(\s*|-+)$/;                                \\
    print "\t$_";                                        \\
  }                                                      \\
'"'"


