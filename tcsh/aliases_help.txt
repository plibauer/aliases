######################################################################################
#  EXAMPLE ALIASES USING ADVANCED METHODS
#
#  1. Reference an environment variable, pass to inline perl script which reads an
#     argument from the command line ($var_DBID in this case)

alias example_1 '$PERL -e  ' "'" '                      \\
     $p = "\"".$ENV{LOCALAPPDATA};                      \\
     $p =~ s|\\|/|g;                                    \\
     $p .= "/Hewlett-Packard/HP TRIM/$ARGV[0]/Log\"";   \\
     print "$p\n"                                       \\
'"'  $var_DBID  " 

#
# 2.  Combine output from 2 or more commands
#
alias example_2 '(echo $var_DBID && echo $var_idolDBID) | $PERL -e '"'"' @i=<>;for(@i){print "*** $_"} '"'"

#
# 3.  Set the output of a command to a variable and use that variable in another alias
#     NOTE: Sometimes an extra 'echo' command is required in the last alias (between calling
#           example_3b and example_3c) to flush the value. See 'idolrectype' in the IDOL
#           alias file
#
set EXAMPLE3VAL=""
alias example_3a 'echo -n \!^'
alias example_3b 'set EXAMPLE3VAL="`example_3a \!^`"'
alias example_3c '$PERL -e '"'"' print "ARGUMENT IS: $ARGV[0]\n" '"'"
alias example_3   'example_3b hello_everyone; example_3c $EXAMPLE3VAL'


alias perlshellhelp      'echo                                                                                  \\
"\n                                                                                                             \\
  1. In order to match single quotes in a pattern, or print, use the escape                                     \\
     sequence \\047 instead of a literal \047 . For example to match the following string:                      \\
                                                                                                                \\
         \047Hello World!\047                                                                                   \\
                                                                                                                \\
     The perl command line would be;                                                                            \\
                                                                                                                \\
         > cat file.txt | perl -ne \047 if (/(\\047Hello World!\\047)/) { print \042\044\061\\n\042 } \047      \\
                                                                                                                \\
     The equavalent for a double quote \042 is \\042 and for \044 is \\044                                      \\
                                                                                                                \\
  2. Pass command line arguments into alias with Perl scripting                                                 \\
     alias example1  \047\044PERL -e \047\042\047\042\047 print \044ARGV[0]; \047\042\047 <argument here> \042  \\
                                                                                                                \\
  3. To pass in some text to a script as well as capturing the output from a command                            \\
     alias example2  \047\044(echo SOME_TEXT && some_command \\!^) | PERL -e \047\042\047\042\047               \\
          @in = <>;                                                                                             \\
          my \044input = shift @in;  # <-- has SOME_TEXT                                                        \\
\n\n"                                                                                                           \\
'
alias shellhelp perlshellhelp
#
#
######################################################################################


alias admininstallhelp  'echo                                          \\
"\n                                                                    \\
From a cygwin prompt;                                                  \\
\n\n                                                                   \\
\t> admininstall ABC.msi <targetpath>                                  \\
\n\n                                                                   \\
<targetpath> must be a windows path, Eg. E:\\tmp\\extract              \\
\n                                                                     \\
So, to extract the MSI Setup.msi to C:/temp/mydir;                     \\
\n\n                                                                   \\
\t> admininstall Setup.msi C:\\\\temp\\\\mydir                         \\
\n"'

##########################

alias findcomphelp      'echo                                               \\
"\n                                                                         \\
\t1. >findcomponents -d E:/91 tsj                                           \\
\t2. findcomp is equivalent to;                                             \\
\t       >findcomponents -d <Repo path>                                     \\
\t   for the  current environment                                           \\
\t3. Multiple components to search;                                         \\
\t       >findcomp CSH.htm sdk.dll                                          \\
\t4. Specify components to search on from a file;                           \\
\t       >findcomp -input components.txt                                    \\
\t4. For more detailed help, >findcomp -help                                \\
\n\n"                                                                       \\
'                                                                           \\

##########################

alias sloghelp      'echo                                                                           \\
"\n                                                                                                 \\
Use slog and slogr if you are in the directory you wish to view the svn log of;                     \\
\n\n                                                                                                \\
\tslog 85123         - Will print all log entries from HEAD -> revision 85123                       \\
\n                                                                                                  \\
\tslogr 85123 84444  - Will print the log entries starting at 85123  -> 84444                       \\
\n\n                                                                                                \\
Use slogurl and slogurlr when you have the repository URL and are not in a checked-out directory;   \\
\n\n                                                                                                \\
\tslogurl svn://localhost/REPOS/trunk 84357\n\tslogurlr svn://localhost/REPOS/trunk 84405 84357     \\
\n\n" '

##########################

alias almsanitycheckhelp  'echo                                                     \\
"\n                                                                                 \\
\t1. Run almcheckdates                                                              \\
\t2. Copy sanityCheckOutput.txt to : ~/Dropbox/Work                                 \\
\t3. Wait a couple of minutes for it to be processed                                \\
\t4. Run almfixdefects to download defectResults.txt and update local files         \\
\n\n"                                                                               \\
'                                                                                   \\
alias sanityhelp      almsanitycheckhelp

##########################


alias escurlhelp            'echo                                                       \\
"\n                                                                                     \\
1. Show all index aliases [esgetaliases]                                                \\
                                                                                        \\
     >curl -XGET http://localhost:9200/_aliases\?pretty=true                            \\
                                                                                        \\
2. Show all entries for an index called <news> [essearchindex news]                     \\
                                                                                        \\
     >curl -XGET http://localhost:9200/news/_search\?pretty=true                        \\
                                                                                        \\
3. Add detailed explanation to queries (add double quotes around uri)  [esgetexplain]   \\
                                                                                        \\
    >curl -XGET http://localhost:9200/news/_search?explain=true\&pretty=true            \\
                                                                                        \\
4. Delete an index called <news> [esdelete news]                                        \\
                                                                                        \\
    >curl -XDELETE http://localhost:9200/news                                           \\
                                                                                        \\
5. Show the settings for a given index <news> [esindxsettings news]                     \\
                                                                                        \\
    >curl -XGET http://localhost:9200/news/_settings                                    \\
                                                                                        \\
"                                                                                       \\
' 

##########################

##########################
